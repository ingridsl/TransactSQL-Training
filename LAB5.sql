-- LAB 05 https://github.com/MicrosoftLearning/QueryingT-SQL/tree/master/Labs
-- challenge 1
 -- 1
 SELECT * FROM SALESLT.PRODUCT;
 SELECT P.PRODUCTID, UPPER(P.NAME) AS PRODUCTNAME, ROUND(P.WEIGHT, 0) AS APPROXWEIGHT 
 FROM SALESLT.PRODUCT AS P;
 -- 2
 SELECT * FROM SALESLT.PRODUCT;
 SELECT P.PRODUCTID, UPPER(P.NAME) AS PRODUCTNAME, ROUND(P.WEIGHT, 0) AS APPROXWEIGHT, YEAR(P.SELLSTARTDATE) AS SELLSTARTYEAR, DATENAME(mm, P.SELLSTARTDATE) AS SELLSTARTMONTH
 FROM SALESLT.PRODUCT AS P;

 -- não é o certo, apenas outro exemplo de uso das funções
  SELECT P.PRODUCTID, DATENAME(yy, P.SELLSTARTDATE) AS SELLSTARTYEAR, MONTH(P.SELLSTARTDATE) AS SELLSTARTMONTH
 FROM SALESLT.PRODUCT AS P;
 -- 3
  SELECT * FROM SALESLT.PRODUCT;
 SELECT P.PRODUCTID, 
	UPPER(P.NAME) AS PRODUCTNAME,
	ROUND(P.WEIGHT, 0) AS APPROXWEIGHT,
	YEAR(P.SELLSTARTDATE) AS SELLSTARTYEAR,
	DATENAME(mm, P.SELLSTARTDATE) AS SELLSTARTMONTH,
	LEFT(P.PRODUCTNUMBER, 2) AS PRODUCTTYPE
 FROM SALESLT.PRODUCT AS P;
 -- 4
  SELECT P.PRODUCTID, 
	UPPER(P.NAME) AS PRODUCTNAME,
	ROUND(P.WEIGHT, 0) AS APPROXWEIGHT,
	YEAR(P.SELLSTARTDATE) AS SELLSTARTYEAR,
	DATENAME(mm, P.SELLSTARTDATE) AS SELLSTARTMONTH,
	LEFT(P.PRODUCTNUMBER, 2) AS PRODUCTTYPE
 FROM SALESLT.PRODUCT AS P
 WHERE ISNUMERIC(Size) = 1;
--challenge 2
 -- 1
 SELECT * FROM SALESLT.SALESORDERHEADER;
 SELECT C.COMPANYNAME, RANK() OVER (ORDER BY SH.TOTALDUE DESC) AS RankTotalValue, SH.TOTALDUE
 FROM SALESLT.SALESORDERHEADER AS SH
 JOIN  SALESLT.CUSTOMER AS C
 ON C.CUSTOMERID = SH.CUSTOMERID
 ORDER BY RANKTOTALVALUE;
-- challenge 3
 -- 1
 SELECT * FROM SALESLT.PRODUCT;
 SELECT * FROM SALESLT.SALESORDERDETAIL;
 
 SELECT P.NAME, SUM(SD.LINETOTAL) AS TOTALREVENUE
 FROM SALESLT.PRODUCT AS P
 JOIN SALESLT.SALESORDERDETAIL AS SD
 ON SD.PRODUCTID = P.PRODUCTID 
 GROUP BY P.NAME
 ORDER BY TOTALREVENUE DESC;

 -- 2
  SELECT * FROM SALESLT.PRODUCT;
 SELECT * FROM SALESLT.SALESORDERDETAIL;
 
 SELECT P.NAME, SUM(SD.LINETOTAL) AS TOTALREVENUE
 FROM SALESLT.PRODUCT AS P
 JOIN SALESLT.SALESORDERDETAIL AS SD
 ON SD.PRODUCTID = P.PRODUCTID 
 WHERE P.ListPrice > 1000
 GROUP BY P.NAME
 ORDER BY TOTALREVENUE DESC;
 -- 3

 SELECT P.NAME, SUM(SD.LINETOTAL) AS TOTALREVENUE
 FROM SALESLT.PRODUCT AS P
 JOIN SALESLT.SALESORDERDETAIL AS SD
 ON SD.PRODUCTID = P.PRODUCTID 
 WHERE P.ListPrice > 1000
 GROUP BY P.NAME
 HAVING SUM(LineTotal) > 20000
 ORDER BY TOTALREVENUE DESC;